const mongoose = require('mongoose');

const reporting = new mongoose.Schema({
    userClass:{
        type:String,
        enum:["FY","SY","TY","BTECH"],
        default:"FY"
    },
    userDiv:{
        type:String,
        enum:["A","B","C","D"],
        default:"A"
    },
    userRoll:{
        type:Number,
        required:true
    },
    userBranch:{
        type:String,
        default:"ECE"
    },
    userGR:{
        type:Number,
        required:true
    },
    userAdmission:{
        type:String,
        enum:["TFWS","Management","CAP","Regular","Other"],
        default:"TFWS"
    },
    userFullName:{
        type:String,
        required:true
    },
    userPrevious:{
        type:String,
        enum:["12th","Diploma","FY","SY","TY"],
        default:"12th"
    },
    userPrevBranch:{
        type:String,
        required:true
    },
    userUniversity:{
        type:String,
        required:true
    },
    userPrevCollege:{
        type:String,
        required:true
    },
    userYearPassing:{
        type:String,
        enum:["2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023"],
        default:"2021"
    },
    userJEEMarks:{
        type:Number,
        required:true
    },
    userCETMarks:{
        type:Number,
        required:true
    },
    userPCM:{
        type:Number,
        required:true
    },
    userDiplomaScore:{
        type:Number,
        required:true
    },
    userDOB:{
        type:String,
        required:true
    },
    userMobile:{
        type:Number,
        required:true
    },
    userEmail:{
        type:String,
        required:true
    },
    userPhysical:{
        type:String,
        enum:["Yes","No"],
        default:"No"
    },
    userHostel:{
        type:String,
        enum:["Yes","No"],
        default:"No"
    },
    userEBC:{
        type:String,
        enum:["Yes","No"],
        default:"No"
    },
    userDateJoining:{
        type:String,
        required:true
    },
    userReligion:{
        type:String,
        enum:["Hindu","Muslim","Jain","Christain","Sikh","Other"],
        default:"Hindu"
    },
    userCategory:{
        type:String,
        enum:["Gen","Obc","St","Sc","Other"],
        default:"Gen"
    },
    userGender:{
        type:String,
        enum:["Male","Female"],
        default:"Male"
    },
    userBlood:{
        type:String,
        enum:["O+","O-","A+","A-","B+","B-","AB+","AB-"],
        default:"O+"
    },
    userMother:{
        type:String,
        required:true
    },
    userFather:{
        type:String,
        required:true
    },
    userFatherOccupation:{
        type:String,
        required:true
    },
    userParentMobile:{
        type:Number,
        required:true
    },
    userParentShri:{
        type:String,
        required:true
    },
    userParentAt:{
        type:String,
        required:true
    },
    userParentPost:{
        type:String,
        required:true
    },
    userParentTal:{
        type:String,
        required:true
    },
    userParentDist:{
        type:String,
        required:true
    },
    userParentState:{
        type:String,
        required:true
    },
    userParentPincode:{
        type:Number,
        required:true
    },
    userParentDob:{
        type:String,
        required:true
    },
    userEnrolledVoter:{
        type:String,
        enum:["Yes","No"],
        default:"No"
    },
    userVoterId:{
        type:String
    },
    userAadhar:{
        type:String,
        required:true
    },
    userParentCorrespondence:{
        type:String,
        required:true
    },
    whoFilled:{
        type:mongoose.Schema.Types.ObjectId,
        ref:"user"
    },
    isApproved:{
        type:String,
        enum:["Pending","Rejected","Approved"],
        default:"Pending"
    },
    rejectionMessage:{
        type:String
    }
})

module.exports = mongoose.model('reporting',reporting);

//43 Fields and one refernce